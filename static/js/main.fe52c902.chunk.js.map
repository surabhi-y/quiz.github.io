{"version":3,"sources":["components/Questionair.js","components/App.js","index.js"],"names":["Questionair","handleAnswer","handleNextQuestion","showAnswer","data","question","correct_answer","answers","dangerouslySetInnerHTML","__html","className","map","answer","textColor","onClick","App","useState","questions","setquestions","currentIndex","setCurrentIndex","score","setScore","setShowAnswer","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","length","ReactDOM","render","document","getElementById"],"mappings":"6JAwCeA,EAtCK,SAAC,GAKd,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,WAEI,IADJC,KAAQC,EACJ,EADIA,SAAUC,EACd,EADcA,eAAgBC,EAC9B,EAD8BA,QAElC,OACE,6BACE,6BACE,wBAAIC,wBAAyB,CAAEC,OAAQJ,MAGzC,yBAAKK,UAAU,eACZH,EAAQI,KAAI,SAACC,GACZ,IAAMC,EAAYV,EACdS,IAAWN,EACT,aACA,WACF,aAEJ,OACE,4BACEI,UAAS,UAAKG,EAAL,cACTC,QAAS,kBAAMb,EAAaW,IAC5BJ,wBAAyB,CAAEC,OAAQG,SAK1CT,GACC,4BAAQO,UAAS,WAAcI,QAASZ,GAAxC,mBCkCOa,MA/Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIuBN,oBAAS,GAJhC,mBAINb,EAJM,KAIMoB,EAJN,KAuCb,OAjCAC,qBAAU,WACRC,MACE,kFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACtB,GACL,IAAMa,EAAYb,EAAKyB,QAAQlB,KAAI,SAACN,GAAD,mBAAC,eAC/BA,GAD8B,IAEjCE,QAAS,CACPF,EAASC,gBADF,mBAEJD,EAASyB,oBACZC,MAAK,kBAAMC,KAAKC,SAAW,WAG/Bf,EAAaD,QAEhB,IAmBD,yBAAKP,UAAU,QAEZO,EAAUiB,OAAS,EAClB,yBAAKxB,UAAU,aACZS,GAAgBF,EAAUiB,OACzB,wBAAIxB,UAAU,YAAd,8BAAqDW,EAArD,KAEE,kBAAC,EAAD,CACEpB,aAzBO,SAACW,GAEfT,GACCS,IAAWK,EAAUE,GAAcb,gBACrCgB,EAASD,EAAQ,GAGrBE,GAAc,IAmBFrB,mBAhBa,WACzBkB,EAAgBD,EAAe,GAC/BI,GAAc,IAeFpB,WAAYA,EACZC,KAAMa,EAAUE,MAKtB,yBAAKT,UAAU,aAAf,iBCxDVyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fe52c902.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Questionair = ({\r\n  handleAnswer,\r\n  handleNextQuestion,\r\n  showAnswer,\r\n  data: { question, correct_answer, answers }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 dangerouslySetInnerHTML={{ __html: question }} />\r\n      </div>\r\n\r\n      <div className='button-flex'>\r\n        {answers.map((answer) => {\r\n          const textColor = showAnswer\r\n            ? answer === correct_answer\r\n              ? \"text-green\"\r\n              : \"text-red\"\r\n            : \"text-white\";\r\n\r\n          return (\r\n            <button\r\n              className={`${textColor} other css`}\r\n              onClick={() => handleAnswer(answer)}\r\n              dangerouslySetInnerHTML={{ __html: answer }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {showAnswer && (\r\n        <button className={`anythcss`} onClick={handleNextQuestion}>\r\n          Next Question\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questionair;\r\n","import React, { useEffect, useState } from \"react\";\nimport Questionair from \"./Questionair\";\n\nfunction App() {\n  const [questions, setquestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  useEffect(() => {\n    fetch(\n      \"https://opentdb.com/api.php?amount=8&category=11&difficulty=easy&type=multiple\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        const questions = data.results.map((question) => ({\n          ...question,\n          answers: [\n            question.correct_answer,\n            ...question.incorrect_answers\n          ].sort(() => Math.random() - 0.5)\n        }));\n\n        setquestions(questions);\n      });\n  }, []);\n\n  const handleAnswer = (answer) => {\n    //check for the answer\n    if (!showAnswer) {\n      if (answer === questions[currentIndex].correct_answer) {\n        setScore(score + 1);\n      }\n    }\n    setShowAnswer(true);\n  };\n\n  const handleNextQuestion = () => {\n    setCurrentIndex(currentIndex + 1);\n    setShowAnswer(false);\n  };\n\n  return (\n\n    <div className='flex'>\n\n      {questions.length > 0 ? (\n        <div className=\"container\">\n          {currentIndex >= questions.length ? (\n            <h1 className=\"anything\">Game ended! your score is: {score}.</h1>\n          ) : (\n              <Questionair\n                handleAnswer={handleAnswer}\n                handleNextQuestion={handleNextQuestion}\n                showAnswer={showAnswer}\n                data={questions[currentIndex]}\n              />\n            )}\n        </div>\n      ) : (\n          <div className=\"container\">loading....</div>\n        )\n      }\n    </div>\n  )\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}